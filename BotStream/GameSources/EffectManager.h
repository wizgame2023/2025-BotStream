/*!
@file EffectManager.h
@brief ポーズを管理するManager
*/

#pragma once
#include "stdafx.h"

namespace basecross
{
	class EffectManager
	{
	//--------------------------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------------------------
	private:
		ManagerRef m_manager;
		RendererRef m_renderer;
		map<wstring, EffectRef> m_effectList;
		bool m_isCreateEffectManager = false;
	//--------------------------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------------------------
	private:
		//----------------------------------------------------------------------------------
		/*
			コンストラクタ
		*/
		EffectManager() {}
		//----------------------------------------------------------------------------------
		/*
			デストラクタ
		*/
		virtual ~EffectManager() {}
	public:
		//----------------------------------------------------------------------------------
		/*
			インスタンス
		*/
		static EffectManager& Instance();
		//----------------------------------------------------------------------------------
		/*
			Effekseerのインターフェース設定
			@param なし
			@return なし
		*/
		void CreateEfkInterface();
		//----------------------------------------------------------------------------------
		/*
			エフェクトの更新処理
			@param なし
			@return なし
		*/
		void InterfaceUpdate();
		//----------------------------------------------------------------------------------
		/*
			エフェクトの描画処理
			@param なし
			@return なし
		*/
		void InterfaceDraw();
		//----------------------------------------------------------------------------------
		/*
			ビューと射影行列を設定する
			@param view	ビュー行列
			@param proj	射影行列
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void SetViewProj(const Mat4x4& view, const Mat4x4& proj);
		//----------------------------------------------------------------------------------
		/*
			エフェクトを登録する
			@param EfkKey エフェクトの登録キーネーム
			@param EfkFilePash エフェクトのファイルパス
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void RegisterEffect(const wstring EfkKey, const wstring EfkFilePash);
		//----------------------------------------------------------------------------------
		/*
			エフェクトを再生する
			@param EfkKey 再生したいエフェクトのキー
			@param Emitter 再生位置
			@param StartFreme 開始フレーム
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		Handle PlayEffect(const wstring EfkKey, const Vec3 Emitter, const float StartFreme = 0.0f);
		//----------------------------------------------------------------------------------
		/*
			エフェクトの位置に加算する
			@param EfkHandle エフェクトのハンドル
			@param Position 加算する値 
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void AddPosition(const Handle& EfkHandle, const Vec3 Position);
		//----------------------------------------------------------------------------------
		/*
			エフェクトの位置を指定する
			@param EfkHandle エフェクトのハンドル
			@param Position 指定する値 
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void SetPosition(const Handle& EfkHandle, const Vec3 Position);
		//----------------------------------------------------------------------------------
		/*
			エフェクトを任意軸周りの反時計周りの回転角度を指定する
			@param EfkHandle エフェクトのハンドル
			@param Quaternion 回転する値
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void SetQuaternion(const Handle& EfkHandle, const Quat Quaternion);
		//----------------------------------------------------------------------------------
		/*
			エフェクトをX軸周りに回転させる値を指定する
			@param EfkHandle エフェクトのハンドル
			@param Rotation 回転させる軸
			@param Rad 回転する値
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void SetRotation(const Handle& EfkHandle, Vec3 Rotation, const float Rad);
		//----------------------------------------------------------------------------------
		/*
			エフェクトの拡大率を指定する。
			@param EfkHandle エフェクトのハンドル
			@param Scale 拡大する値
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void SetScale(const Handle& EfkHandle, const Vec3 Scale);
		//----------------------------------------------------------------------------------
		/*
			エフェクトの全体の色を指定する
			@param EfkHandle エフェクトのハンドル
			@param Col 色の値
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void SetAllColor(const Handle& EfkHandle, const Col4 Col);
		//----------------------------------------------------------------------------------
		/*
			エフェクトの再生を止める
			@param EfkHandle エフェクトのハンドル
			@return	なし
		*/
		//----------------------------------------------------------------------------------
		void StopEffect(const Handle& EfkHandle);
		//----------------------------------------------------------------------------------
		/*
			エフェクトのインスタンスを再生スピードを設定する。
			@param	handle	インスタンスのハンドル
			@param	speed	スピード
			@retrun なし
		*/
		//----------------------------------------------------------------------------------
		void SetSpeed(const Handle& EfkHandle, const float Speed);
	};
}